{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablomanox\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from './InfoBox.js';\nimport Map from './Map.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries \").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = event => {\n    const countryCode = event.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  console.log(\"COUNTRY INFO >>>\", countryInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4zz4OKhzZDcDuT8tgrUbJFPihgI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pablomanox/Desktop/Projects/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent} from \"@material-ui/core\";\nimport InfoBox from './InfoBox.js';\nimport Map from './Map.js';\nimport './App.css';\n\n\nfunction App() {\n   \n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n\n  useEffect(() => {\n     fetch(\"https://disease.sh/v3/covid-19/all\")\n     .then(response => response.json())\n     .then(data => {\n       setCountryInfo(data);\n     })\n  }, [])\n\n  useEffect(() => {\n   \n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries \")\n      .then((response) => response.json())\n      .then((data) => {\n         const countries = data.map((country) => (\n           {\n             name: country.country,\n             value: country.countryInfo.iso2\n           }\n         )) ;\n\n         setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n \n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n  \n    const url = \n    countryCode === \"worldwide\" \n    ? \"https://disease.sh/v3/covid-19/all\" \n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n   \n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      \n      setCountryInfo(data);\n    });\n  };\nconsole.log(\"COUNTRY INFO >>>\", countryInfo);\n  \n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        \n      <div className=\"app_header\" >\n       <h1>COVID-19 TRACKER</h1>\n        <FormControl className=\"app_dropdown\">\n           <Select   variant=\"outlined\" onChange={onCountryChange} value={country} >  \n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>     \n             {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n             }\n           </Select>\n         </FormControl>\n      </div>\n      \n       <div className=\"app_stats\">\n         <InfoBox \n         title=\"Coronavirus Cases\"\n         cases={countryInfo.todayCases} \n         total={countryInfo.cases}\n          />\n         <InfoBox \n         title=\"Recovered\" \n         cases={countryInfo.todayRecovered} \n         total={countryInfo.recovered}\n          />\n        <InfoBox \n        title=\"Deaths\" \n        cases={countryInfo.todayDeaths} \n        total={countryInfo.deaths} \n        />\n       \n        </div>\n        <Map />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n\n          <h3>Worldwide new cases</h3>\n        </CardContent>\n      </Card>\n     \n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}