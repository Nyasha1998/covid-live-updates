{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablomanox\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\src\\\\util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 2000\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n}; //Draw circles on the map with intersactive toolkit\n\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  fillOpacity: 0.4,\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  redius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: true,\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 7\n}, this));","map":{"version":3,"sources":["C:/Users/pablomanox/Desktop/Projects/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,SADF;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADa;AAKpBC,EAAAA,SAAS,EAAE;AACPF,IAAAA,GAAG,EAAE,SADE;AAEPC,IAAAA,UAAU,EAAE;AAFL,GALS;AASpBE,EAAAA,MAAM,EAAE;AACJH,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,UAAU,EAAE;AAFR;AATY,CAAxB;AAeA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAC9B,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AAEAC,EAAAA,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,QAAID,CAAC,CAACT,KAAF,GAAUU,CAAC,CAACV,KAAhB,EAAuB;AACnB,aAAO,CAAC,CAAR;AACH,KAFD,MAEO;AACH,aAAO,CAAP;AACH;AACA,GAND;AAOA,SAAOO,UAAP;AACH,CAXM,C,CAaP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KACzBN,IAAI,CAACO,GAAL,CAAUC,OAAD,iBACP,QAAC,MAAD;AACE,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV;AAEE,EAAA,WAAW,EAAE,GAFf;AAGE,EAAA,KAAK,EAAElB,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAHpC;AAIE,EAAA,SAAS,EAAEF,eAAe,CAACa,SAAD,CAAf,CAA2BX,GAJxC;AAKE,EAAA,MAAM,EACFiB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCb,eAAe,CAACa,SAAD,CAAf,CAA2BV,UANjE;AAAA,yBASE,QAAC,KAAD;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AACI,QAAA,SAAS,MADb;AAEI,QAAA,KAAK,EAAE;AAAEkB,UAAAA,eAAe,EAAG,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD;AAFX;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,kBAAMP,OAAO,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,8BAAalB,OAAO,CAACkB,OAAO,CAACd,KAAT,CAAP,CAAuBsB,MAAvB,CAA8B,KAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kCAAiB1B,OAAO,CAACkB,OAAO,CAACX,SAAT,CAAP,CAA2BmB,MAA3B,CAAkC,KAAlC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,+BAAc1B,OAAO,CAACkB,OAAO,CAACV,MAAT,CAAP,CAAwBkB,MAAxB,CAA+B,KAA/B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,QADF,CADG","sourcesContent":["import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: \"#CC1034\",\r\n        multiplier: 800,\r\n    },\r\n    recovered: {\r\n        hex: \"#7dd71d\",        \r\n        multiplier: 1200,\r\n    },\r\n    deaths: {\r\n        hex: \"#fb4443\",\r\n        multiplier: 2000,\r\n    },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n        return -1;\r\n    } else {\r\n        return 1;\r\n    }\r\n    })\r\n    return sortedData;\r\n}\r\n\r\n//Draw circles on the map with intersactive toolkit\r\nexport const showDataOnMap = (data, casesType = \"cases\") => \r\n    data.map((country) => (\r\n      <Circle\r\n        center={[country.countryInfo.lat, country.countryInfo.long]}\r\n        fillOpacity={0.4}\r\n        color={casesTypeColors[casesType].hex}\r\n        fillColor={casesTypeColors[casesType].hex}\r\n        redius={\r\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n        }\r\n      > \r\n        <Popup>\r\n           <div className=\"info-container\">\r\n               <div \r\n                   className\r\n                   style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n               />\r\n               <div>{country.country}</div>\r\n               <div>Cases: {numeral(country.cases).format(\"0,0\")}</div>\r\n               <div>Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\r\n               <div>Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\r\n           </div>\r\n        </Popup>\r\n      </Circle>\r\n    ));\r\n\r\n"]},"metadata":{},"sourceType":"module"}