{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablomanox\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from './InfoBox.js';\nimport Map from './Map.js';\nimport Table from './Table.js';\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from './LineGraph.js';\nimport numeral from \"numeral\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries \").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n  console.log(casesType);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Coronavirus Cases\",\n          isRed: true,\n          active: casesType === \"cases\",\n          cases: prettyPrintStat(countryInfo.todayCases),\n          total: numeral(countryInfo.cases).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recovered\",\n          active: casesType === \"recovered\",\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          total: numeral(countryInfo.recovered).format(\"0.0a\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          onCLick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\",\n          isRed: true,\n          active: casesType === \"deaths\",\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          total: prettyPrintStat(countryInfo.deaths)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        casesType: casesType,\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app_right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CF8ssyYqxIZCGbanK1XZPivu3MY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pablomanox/Desktop/Projects/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","numeral","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","console","log","casesType","onCountryChange","e","countryCode","target","url","long","setCasesType","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,WAA9C,QAAgE,mBAAhE;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,QAA1C;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,WAAP;AACA,OAAO,0BAAP;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,WAAD,CAAtC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC;AAAEyB,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE,CAAC;AAAvB,GAAD,CAA1C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb8B,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdf,MAAAA,cAAc,CAACe,IAAD,CAAd;AACD,KAJD;AAKF,GANQ,EAMN,EANM,CAAT;AAQAlC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmC,gBAAgB,GAAG,YAAY;AACnC,YAAML,KAAK,CAAC,2CAAD,CAAL,CACLC,IADK,CACCC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADd,EAELF,IAFK,CAECG,IAAD,IAAU;AACb,cAAMpB,SAAS,GAAGoB,IAAI,CAACE,GAAL,CAAUpB,OAAD,KACzB;AACEqB,UAAAA,IAAI,EAAErB,OAAO,CAACA,OADhB;AAEEsB,UAAAA,KAAK,EAAEtB,OAAO,CAACE,WAAR,CAAoBqB;AAF7B,SADyB,CAAT,CAAlB;AAOA,cAAMC,UAAU,GAAG/B,QAAQ,CAACyB,IAAD,CAA3B;AACAb,QAAAA,YAAY,CAACmB,UAAD,CAAZ;AACAX,QAAAA,eAAe,CAACK,IAAD,CAAf;AACAnB,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACF,OAdK,CAAN;AAeD,KAhBD;;AAkBAqB,IAAAA,gBAAgB;AACjB,GApBQ,EAoBN,EApBM,CAAT;AAsBAM,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AAEA,QAAMC,eAAe,GAAG,MAAOC,CAAP,IAAa;AACnC,UAAMC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAAST,KAA7B;AAEA,UAAMU,GAAG,GACTF,WAAW,KAAK,WAAhB,GACE,oCADF,GAEG,4CAA2CA,WAAY,EAH1D;AAKAhB,IAAAA,KAAK,CAACkB,GAAD,CAAL,CACCjB,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZjB,MAAAA,UAAU,CAAC6B,WAAD,CAAV;AACA3B,MAAAA,cAAc,CAACe,IAAD,CAAd;AAEAX,MAAAA,YAAY,CAAC,CAACW,IAAI,CAAChB,WAAL,CAAiBM,GAAlB,EAAuBU,IAAI,CAAChB,WAAL,CAAiB+B,IAAxC,CAAD,CAAZ;AACAtB,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD,KARD;AASD,GAjBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BAEA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,cAAvB;AAAA,iCACG,QAAC,MAAD;AAAU,YAAA,OAAO,EAAC,UAAlB;AAA6B,YAAA,KAAK,EAAEX,OAApC;AAA8C,YAAA,QAAQ,EAAE4B,eAAxD;AAAA,oCACC,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAGK9B,SAAS,CAACsB,GAAV,CAAepB,OAAD,iBACZ,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEA,OAAO,CAACsB,KAAzB;AAAA,wBAAiCtB,OAAO,CAACqB;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADF,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAgBC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,OAAD;AACA,UAAA,OAAO,EAAGQ,CAAD,IAAOK,YAAY,CAAC,OAAD,CAD5B;AAEA,UAAA,KAAK,EAAC,mBAFN;AAGA,UAAA,KAAK,MAHL;AAIA,UAAA,MAAM,EAAEP,SAAS,KAAK,OAJtB;AAKA,UAAA,KAAK,EAAEjC,eAAe,CAACQ,WAAW,CAACiC,UAAb,CALtB;AAMA,UAAA,KAAK,EAAEvC,OAAO,CAACM,WAAW,CAACkC,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC;AANP;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,OAAD;AACA,UAAA,OAAO,EAAGR,CAAD,IAAOK,YAAY,CAAC,WAAD,CAD5B;AAEA,UAAA,KAAK,EAAC,WAFN;AAGA,UAAA,MAAM,EAAEP,SAAS,KAAK,WAHtB;AAIA,UAAA,KAAK,EAAEjC,eAAe,CAACQ,WAAW,CAACoC,cAAb,CAJtB;AAKA,UAAA,KAAK,EAAE1C,OAAO,CAACM,WAAW,CAACqC,SAAb,CAAP,CAA+BF,MAA/B,CAAsC,MAAtC;AALP;AAAA;AAAA;AAAA;AAAA,gBATF,eAgBC,QAAC,OAAD;AACA,UAAA,OAAO,EAAGR,CAAD,IAAOK,YAAY,CAAC,QAAD,CAD5B;AAEA,UAAA,KAAK,EAAC,QAFN;AAGA,UAAA,KAAK,MAHL;AAIA,UAAA,MAAM,EAAEP,SAAS,KAAK,QAJtB;AAKA,UAAA,KAAK,EAAEjC,eAAe,CAACQ,WAAW,CAACsC,WAAb,CALtB;AAMA,UAAA,KAAK,EAAE9C,eAAe,CAACQ,WAAW,CAACuC,MAAb;AANtB;AAAA;AAAA;AAAA;AAAA,gBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBD,eA0CE,QAAC,GAAD;AACE,QAAA,SAAS,EAAE7B,YADb;AAEE,QAAA,SAAS,EAAEe,SAFb;AAGE,QAAA,MAAM,EAAErB,SAHV;AAIE,QAAA,IAAI,EAAEI;AAJR;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkDE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CA9HD;;GAAMP,G;;KAAAA,G;AAgIN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect, } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent} from \"@material-ui/core\";\nimport InfoBox from './InfoBox.js';\nimport Map from './Map.js';\nimport Table from './Table.js';\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from './LineGraph.js';\nimport numeral from \"numeral\";\nimport \"./App.css\";\nimport \"leaflet/dist/leaflet.css\";\n\n\nconst App = () => {\n   \n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3); \n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() => {\n     fetch(\"https://disease.sh/v3/covid-19/all\")\n     .then((response) => response.json())\n     .then((data) => {\n       setCountryInfo(data);\n     })\n  }, [])\n\n  useEffect(() => { \n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries \")\n      .then((response) => response.json())\n      .then((data) => {\n         const countries = data.map((country) => (\n           {\n             name: country.country,\n             value: country.countryInfo.iso2,\n           }\n         )) ;\n       \n         const sortedData = sortData(data);\n         setTableData(sortedData);\n         setMapCountries(data);\n         setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n \n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n  \n    const url = \n    countryCode === \"worldwide\" \n    ? \"https://disease.sh/v3/covid-19/all\" \n    : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n   \n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n  \n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        \n      <div className=\"app_header\" >\n       <h1>COVID-19 TRACKER</h1>\n        <FormControl className=\"app_dropdown\">\n           <Select   variant=\"outlined\" value={country}  onChange={onCountryChange} >  \n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>     \n             {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n             }\n           </Select>\n         </FormControl>\n      </div>\n      \n       <div className=\"app_stats\">\n         <InfoBox \n         onClick={(e) => setCasesType(\"cases\")}\n         title=\"Coronavirus Cases\"\n         isRed\n         active={casesType === \"cases\"}\n         cases={prettyPrintStat(countryInfo.todayCases)} \n         total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n         <InfoBox \n         onClick={(e) => setCasesType(\"recovered\")}\n         title=\"Recovered\" \n         active={casesType === \"recovered\"}\n         cases={prettyPrintStat(countryInfo.todayRecovered)} \n         total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n        <InfoBox \n        onCLick={(e) => setCasesType(\"deaths\")}\n        title=\"Deaths\" \n        isRed\n        active={casesType === \"deaths\"}\n        cases={prettyPrintStat(countryInfo.todayDeaths)} \n        total={prettyPrintStat(countryInfo.deaths)} \n        />\n\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          <LineGraph />\n        </CardContent>\n      </Card>\n    \n     \n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}