{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablomanox\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    let chartData = [];\n    let lastDataPoint = data[casesType][date];\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      let chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Im a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/pablomanox/Desktop/Projects/covid-19-tracker/src/LineGraph.js"],"names":["React","Line","LineGraph","data","setData","useState","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","useEffect","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMC,cAAc,GAAG,CAAEH,IAAF,EAAQI,SAAS,GAAG,OAApB,KAAgC;AACnD,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAKC,aAAa,GAAGN,IAAI,CAACI,SAAD,CAAJ,CAAgBG,IAAhB,CAArB;;AACA,SAAI,IAAIA,IAAR,IAAgBP,IAAI,CAACQ,KAArB,EAA4B;AACxB,UAAIF,aAAJ,EAAmB;AACf,YAAIG,YAAY,GAAG;AACfC,UAAAA,CAAC,EAACH,IADa;AAEfI,UAAAA,CAAC,EAAEX,IAAI,CAACI,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFZ,SAAnB;AAIDD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACF;AAEJ;;AACD,WAAOJ,SAAP;AAEH,GAfD;;AAiBAQ,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOf,IAAD,IAAU;AAGZ,UAAIK,SAAS,GAAGF,cAAc,CAACH,IAAD,CAA9B;AACAC,MAAAA,OAAO,CAACI,SAAD,CAAP;AAEH,KARD;AASH,GAVQ,EAUN,EAVM,CAAT;AAcA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AACRa,QAAAA,QAAQ,EAAE,CAAC;AACPC,UAAAA,eAAe,EAAE,uBADV;AAEDC,UAAAA,WAAW,EAAE,SAFZ;AAGXpB,UAAAA,IAAI,EAAEA;AAHK,SAAD;AADF;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA/CQD,S;;KAAAA,S;AAiDT,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({});\r\n    \r\n    const buildChartData = ( data, casesType = \"cases\") => {\r\n        let chartData = [];\r\n        let  lastDataPoint = data[casesType][date];\r\n        for(let date in data.cases) {\r\n            if (lastDataPoint) {\r\n                let newDataPoint = {\r\n                    x:date,\r\n                    y: data[casesType][date] - lastDataPoint,\r\n                };\r\n               chartData.push(newDataPoint);\r\n            }\r\n           \r\n        }\r\n        return chartData;\r\n    \r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n\r\n\r\n            let chartData = buildChartData(data);\r\n            setData(chartData);\r\n           \r\n        });\r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Im a graph</h1>\r\n            <Line data={{\r\n                datasets: [{\r\n                    backgroundColor: \"rgba(204, 16, 52, 0.5\",\r\n                          borderColor: \"#CC1034\",\r\n                data: data\r\n                }]\r\n            }} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph;\r\n"]},"metadata":{},"sourceType":"module"}