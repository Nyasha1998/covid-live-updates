{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pablomanox\\\\Desktop\\\\Projects\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (toolipItem, data) {\n        return numeral(toolipItem.value).formal(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => {\n        response.json();\n      }).then(data => {\n        let chartData = buildChartData(data, \"cases\");\n        setData(chartData);\n        console.log(chartData);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Im a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/pablomanox/Desktop/Projects/covid-19-tracker/src/LineGraph.js"],"names":["React","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","toolipItem","data","value","formal","scales","xAxes","type","time","format","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","setData","useState","useEffect","fetchData","fetch","then","response","json","chartData","buildChartData","console","log","length","datasets","backgroundColor","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADI;AAIZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL;AADD,GAJE;AASZC,EAAAA,mBAAmB,EAAE,KATT;AAUZC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,OADA;AAENC,IAAAA,SAAS,EAAE,KAFL;AAGNC,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAE,UAAUC,UAAV,EAAsBC,IAAtB,EAA4B;AAC/B,eAAOd,OAAO,CAACa,UAAU,CAACE,KAAZ,CAAP,CAA0BC,MAA1B,CAAiC,MAAjC,CAAP;AACH;AAHM;AAHL,GAVE;AAmBZC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAE,UADN;AAEFC,QAAAA,aAAa,EAAE;AAFb;AAFV,KADG,CADH;AAUJC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,SAAS,EAAE;AACPrB,QAAAA,OAAO,EAAE;AADF,OADf;AAIIsB,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,UAAUX,KAAV,EAAiBY,KAAjB,EAAwBC,MAAxB,EAAgC;AACtC,iBAAO5B,OAAO,CAACe,KAAD,CAAP,CAAeM,MAAf,CAAsB,IAAtB,CAAP;AACH;AAHE;AAJX,KADG;AAVH;AAnBI,CAAhB;;AA8CA,SAASQ,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACf,IAAD,EAAOgB,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AAEIC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,SAAS,GAAG,YAAY;AAE1B,YAAOC,KAAK,CAAC,4DAAD,CAAL,CACNC,IADM,CACAC,QAAD,IAAc;AACnBA,QAAAA,QAAQ,CAACC,IAAT;AACA,OAHM,EAKNF,IALM,CAKArB,IAAD,IAAU;AACZ,YAAIwB,SAAS,GAAGC,cAAc,CAACzB,IAAD,EAAO,OAAP,CAA9B;AACAgB,QAAAA,OAAO,CAACQ,SAAD,CAAP;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACH,OATM,CAAP;AAUH,KAZD;;AAaAL,IAAAA,SAAS;AACX,GAfO,EAeL,EAfK,CAAT;AAiBJ,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAAnB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE4B,MAAN,IAAe,CAAf,iBACD,QAAC,IAAD;AACA,MAAA,OAAO,EAAEzC,OADT;AAEA,MAAA,IAAI,EAAE;AACF0C,QAAAA,QAAQ,EAAE,CACN;AACAC,UAAAA,eAAe,EAAE,uBADjB;AAEAC,UAAAA,WAAW,EAAE,SAFb;AAGA/B,UAAAA,IAAI,EAAEA;AAHN,SADM;AADR;AAFN;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAvCQe,S;;KAAAA,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (toolipItem, data) {\r\n                return numeral(toolipItem.value).formal(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n    scales: {\r\n        xAxes: [\r\n            {\r\n                type: \"time\",\r\n                time: {\r\n                    format: \"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes: [\r\n            {\r\n                gridLines: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n                    callback: function (value, index, values) {\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\n\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({});\r\n    \r\n        useEffect(() => {\r\n            const fetchData = async () => {\r\n     \r\n                await  fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n                .then((response) => {\r\n                 response.json();\r\n                } )\r\n     \r\n                .then((data) => {   \r\n                    let chartData = buildChartData(data, \"cases\" );\r\n                    setData(chartData);\r\n                    console.log(chartData);\r\n                });\r\n            };\r\n            fetchData();\r\n         }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Im a graph</h1>\r\n            {data?.length > 0 && ( \r\n            <Line \r\n            options={options}\r\n            data={{\r\n                datasets: [\r\n                    {\r\n                    backgroundColor: \"rgba(204, 16, 52, 0.5\",\r\n                    borderColor: \"#CC1034\",\r\n                    data: data,\r\n                },\r\n            ],\r\n         }} \r\n    /> \r\n   )}\r\n </div> \r\n    )   \r\n}\r\nexport default LineGraph;\r\n"]},"metadata":{},"sourceType":"module"}